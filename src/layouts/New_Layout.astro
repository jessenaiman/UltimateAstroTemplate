---
import { ClientRouter } from "astro:transitions";
import Analytics from "@vercel/analytics/astro";
import Background from "../components/ui/Background.astro";
import Footer from "../components/ui/Footer.astro";
import Header from "../components/ui/Menu";
import Head from "../components/core/Head.astro";
import "../styles/global.css";

interface Props {
  title: string;
  bgColor?: string;
  primaryBallColor?: string;
  secondaryBallColor?: string;
  gridColor?: string;
  diagonalColor?: string;
  vignetteColor?: string;
}

const {
  title,
  bgColor = "#0F1115",
  primaryBallColor,
  secondaryBallColor,
  gridColor,
  diagonalColor,
  vignetteColor,
} = Astro.props;

const theme = Astro.cookies.get("theme")?.value || "dark";
---

<!doctype html>
<html lang="en" class="scroll-smooth" data-theme="dark">
  <Head title={title} bgColor={bgColor} />
  <body class="min-h-screen bg-base-100 text-base-content">
    <ClientRouter />
    <Analytics />
    <Background
      bgColor={bgColor}
      primaryBallColor={primaryBallColor}
      secondaryBallColor={secondaryBallColor}
      gridColor={gridColor}
      diagonalColor={diagonalColor}
      vignetteColor={vignetteColor}
    />
    <Header client:load />
    <main class="page-content">
      <slot />
    </main>
    <Footer />
  </body>
</html>

<style is:global>
  :root {
    --accent: 136, 58, 234;
    --accent-light: 224, 204, 250;
    --accent-dark: 49, 10, 101;
    --accent-gradient: linear-gradient(
      45deg,
      rgb(var(--accent)),
      rgb(var(--accent-light)) 30%,
      white 60%
    );
  }
  html {
    font-family: system-ui, sans-serif;
    background: #13151a;
    background-size: 224px;
  }
  code {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }

  @keyframes fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes slide-from-right {
    from {
      transform: translateX(30px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @keyframes slide-from-top {
    from {
      transform: translateY(-30px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  ::view-transition-old(root) {
    animation: fade-out 0.5s ease-out both;
  }

  ::view-transition-new(root) {
    animation: fade-in 0.5s ease-out both;
  }

  .page-content {
    animation: slide-from-right 0.5s ease-out;
  }

  .header-content {
    animation: slide-from-top 0.5s ease-out;
  }

  /* Base theme colors */
  :root {
    --background: #ffffff;
    --foreground: #27272a;
    --muted: #f4f4f5;
    --muted-foreground: #71717a;
    --accent: #2563eb;
  }

  [data-theme="dark"] {
    --background: #0f1115;
    --foreground: #ffffff;
    --muted: #27272a;
    --muted-foreground: #a1a1aa;
    --accent: #3b82f6;
  }

  body {
    background-color: var(--background);
    color: var(--foreground);
  }
</style>

<script>
  function handleThemeChange() {
    const theme = localStorage.getItem("theme") || "dark";
    document.documentElement.setAttribute("data-theme", theme);
    document
      .querySelector("html")
      ?.setAttribute("class", `${theme}-theme scroll-smooth`);
    document.cookie = `theme=${theme};path=/;max-age=31536000`;
  }

  // Initial setup
  handleThemeChange();

  // Listen for theme changes
  window.addEventListener("storage", (e) => {
    if (e.key === "theme") {
      handleThemeChange();
    }
  });

  window.addEventListener("themeChange", () => {
    handleThemeChange();
  });

  // Handle theme persistence during page transitions
  document.addEventListener("astro:after-swap", () => {
    handleThemeChange();
  });
</script>

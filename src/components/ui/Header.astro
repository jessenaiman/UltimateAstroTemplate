---
import { frameworks } from '../../data/navigation';
import { cred } from '../../data/site';
import GitHubButton from './GitHubButton.astro';

const currentPath = Astro.url.pathname;
const isActivePath = (path: string) => {
    const normalizedCurrent = currentPath.replace(/\/+$/, '').toLowerCase();
    const normalizedPath = path.replace(/\/+$/, '').toLowerCase();
    return path === '/' 
        ? (normalizedCurrent === '' || normalizedCurrent === '/') 
        : normalizedCurrent.endsWith(normalizedPath);
};

const stars = await fetch(`https://api.github.com/repos/${cred.GITHUB_USER}/${cred.REPO_NAME}`)
    .then(res => res.ok ? res.json() : Promise.reject('Failed to fetch'))
    .then(data => data.stargazers_count)
    .catch(() => 0);
---

<header class="top-0 left-0 right-0 z-50 header-content">
    <nav class="container mx-auto px-4 py-6">
        {/* Desktop Navigation */}
        <div class="hidden lg:grid grid-cols-[0.5fr_auto_0.5fr] xl:grid-cols-[1fr_auto_1fr] items-center">
            <div></div>
            
            {/* Navigation Links */}
            <div class="bg-gray-900/50 backdrop-blur-md px-2 lg:px-3 xl:px-6 py-2 lg:py-2.5 rounded-full border border-gray-800/50">
                {frameworks.map((framework, index) => {
                    const isActive = isActivePath(framework.path);
                    const linkStyle = `
                        transition-all duration-300 
                        relative 
                        ${isActive ? 'text-white' : 'text-gray-400'} 
                        after:content-[''] 
                        after:absolute 
                        after:bottom-0 
                        after:left-0 
                        after:w-full 
                        after:h-[2px] 
                        after:transition-all 
                        after:duration-300
                        after:transform
                        after:scale-x-0
                        hover:after:scale-x-100
                        after:origin-left
                    `;
                    const linkColor = `after:bg-[${framework.color}]`;
                    return (
                        <>
                            {index !== 0 && <span class="mx-1.5 lg:mx-2 xl:mx-4 text-gray-600">|</span>}
                            <a
                                href={framework.path}
                                class={`${linkStyle} ${linkColor} ${isActive ? 'font-medium' : ''}`}
                                style={`
                                    ${isActive ? `color: ${framework.color};` : ''}
                                    --framework-color: ${framework.color};
                                `}
                                onmouseenter={`this.style.color = '${framework.color}'`}
                                onmouseleave={`this.style.color = ${isActive ? `'${framework.color}'` : "''"}`}
                            >
                                {framework.displayName}
                            </a>
                        </>
                    );
                })}
            </div>

            {/* GitHub Links */}
            <div class="flex justify-end items-center gap-3 lg:gap-4 xl:gap-6">
                <button
                    id="theme-toggle"
                    class="p-1.5 lg:p-2 text-gray-400 hover:text-white bg-gray-900/50 backdrop-blur-md rounded-full border border-gray-800/50 transition-all duration-300 hover:scale-110 flex items-center"
                    aria-label="Toggle Dark Mode"
                >
                    <svg
                        id="theme-toggle-dark-icon"
                        class="w-5 h-5 hidden"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                    >
                        <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
                    </svg>
                    <svg
                        id="theme-toggle-light-icon"
                        class="w-5 h-5 hidden"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                    >
                        <path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"></path>
                    </svg>
                </button>
                <a
                    href={`https://github.com/${cred.GITHUB_USER}`}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="p-1.5 lg:p-2 text-gray-400 hover:text-white bg-gray-900/50 backdrop-blur-md rounded-full border border-gray-800/50 transition-all duration-300 hover:scale-110 flex items-center"
                    aria-label="GitHub Profile"
                >
                    <svg 
                        class="lg:w-[18px] lg:h-[18px] xl:w-[20px] xl:h-[20px]"
                        viewBox="0 0 24 24" 
                        fill="none" 
                        stroke="currentColor" 
                        stroke-width="2" 
                        stroke-linecap="round" 
                        stroke-linejoin="round"
                    >
                        <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22" />
                    </svg>
                </a>

                <GitHubButton 
                    GITHUB_USER=${cred.GITHUB_USER}
                    REPO_NAME=${cred.REPO_NAME}
                    stars={stars}
                />
            </div>
        </div>

        {/* Mobile Navigation */}
        <div class="lg:hidden flex justify-between items-center">
            <a href="/" class="text-xl font-semibold">Ultimate Astro</a>
            <div class="flex items-center gap-3">
                <button
                    id="mobile-theme-toggle"
                    class="p-1.5 text-gray-400 hover:text-white bg-gray-900/50 backdrop-blur-md rounded-full border border-gray-800/50 transition-all duration-300"
                    aria-label="Toggle Dark Mode"
                >
                    <svg
                        id="mobile-theme-toggle-dark-icon"
                        class="w-5 h-5 hidden"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                    >
                        <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
                    </svg>
                    <svg
                        id="mobile-theme-toggle-light-icon"
                        class="w-5 h-5 hidden"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                    >
                        <path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"></path>
                    </svg>
                </button>
                <button
                    id="mobile-menu-button"
                    class="p-1.5 text-gray-400 hover:text-white bg-gray-900/50 backdrop-blur-md rounded-full border border-gray-800/50 transition-all duration-300"
                    aria-label="Toggle Menu"
                >
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                    </svg>
                </button>
            </div>
        </div>

        {/* Mobile Menu Overlay */}
        <div id="mobile-menu" class="fixed inset-0 bg-gray-900/95 backdrop-blur-md z-50 transform translate-x-full transition-transform duration-300 lg:hidden">
            <div class="container mx-auto px-4 py-8">
                <div class="flex justify-end mb-8">
                    <button
                        id="mobile-menu-close"
                        class="p-1.5 text-gray-400 hover:text-white bg-gray-900/50 backdrop-blur-md rounded-full border border-gray-800/50 transition-all duration-300"
                        aria-label="Close Menu"
                    >
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
                <nav class="flex flex-col items-center space-y-6">
                    {frameworks.map((framework) => {
                        const isActive = isActivePath(framework.path);
                        return (
                            <a
                                href={framework.path}
                                class={`text-lg ${isActive ? 'text-white font-medium' : 'text-gray-400'} hover:text-white transition-colors duration-200`}
                                style={isActive ? `color: ${framework.color};` : ''}
                            >
                                {framework.displayName}
                            </a>
                        );
                    })}
                    <div class="flex items-center gap-4 mt-4">
                        <a
                            href={`https://github.com/${cred.GITHUB_USER}`}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="p-2 text-gray-400 hover:text-white bg-gray-900/50 backdrop-blur-md rounded-full border border-gray-800/50 transition-all duration-300"
                        >
                            <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22" />
                            </svg>
                        </a>
                        <GitHubButton 
                            GITHUB_USER=${cred.GITHUB_USER}
                            REPO_NAME=${cred.REPO_NAME}
                            stars={stars}
                        />
                    </div>
                </nav>
            </div>
        </div>
    </nav>
</header>

<script>
    function setupMobileMenu() {
        const button = document.getElementById('mobile-menu-button');
        const closeButton = document.getElementById('mobile-menu-close');
        const menu = document.getElementById('mobile-menu');
        const mobileMenuLinks = menu?.querySelectorAll('a');

        button?.addEventListener('click', () => {
            menu?.classList.remove('translate-x-full');
            document.body.style.overflow = 'hidden';
        });

        closeButton?.addEventListener('click', () => {
            menu?.classList.add('translate-x-full');
            document.body.style.overflow = '';
        });

        mobileMenuLinks?.forEach(link => {
            link.addEventListener('click', () => {
                menu?.classList.add('translate-x-full');
                document.body.style.overflow = '';
            });
        });
    }

    function setupThemeToggle() {
        const darkIcon = document.getElementById('theme-toggle-dark-icon');
        const lightIcon = document.getElementById('theme-toggle-light-icon');
        const mobileDarkIcon = document.getElementById('mobile-theme-toggle-dark-icon');
        const mobileLightIcon = document.getElementById('mobile-theme-toggle-light-icon');

        function setTheme(theme: string) {
            document.documentElement.setAttribute('data-theme', theme);
            localStorage.setItem('theme', theme);
            
            // Update both desktop and mobile icons
            [darkIcon, mobileDarkIcon].forEach(icon => {
                icon?.classList.toggle('hidden', theme === 'dark');
            });
            [lightIcon, mobileLightIcon].forEach(icon => {
                icon?.classList.toggle('hidden', theme === 'light');
            });
        }

        // Set initial icon state
        const currentTheme = localStorage.getItem('theme') || 'dark';
        setTheme(currentTheme);

        // Add click handlers for both desktop and mobile buttons
        ['theme-toggle', 'mobile-theme-toggle'].forEach(id => {
            document.getElementById(id)?.addEventListener('click', () => {
                const theme = document.documentElement.getAttribute('data-theme');
                setTheme(theme === 'dark' ? 'light' : 'dark');
            });
        });
    }

    // Initialize both mobile menu and theme toggle
    setupMobileMenu();
    setupThemeToggle();
</script>